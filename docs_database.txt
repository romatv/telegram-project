Database is connected to this project to keep track of several parameters,
and change functinoality accordingly.

LOGIC FOR DATABASE OPERATION:
Functions are imported into telegram_bot.py ffrom database_operations.py file.
database_operations.py contains base abstract class DatabaseOperations, which provides
contract to its subclasses. Reason is to provide initialization rule, where connection, cursor
object and chat_id are passed to class.
Two Subclasses are created, for getting and modifying data.
Each subclass has staticmethod decorator, to provide try except functionality
to each method. In case of modify or insert methods, if exception arises, transaction rollback
is performed.

Then actual functions created to perform combinations of db operations required in programm.

Three decorators are created to wrap these functions, depending on whether they need to only
get data, only modify data or both.

These decorators do next:
0. Takes function as parameter.
1. Initialize connection.
2. Create connection, tunnel and cursor objects.
3. Create instance of required class (GetDataoperations or ModifyDataOperations, or both).
4. Pass objects and chat_id to these instances.
5. Then creates try - except - finally block.
6. Pass instances of class to the wrapped function.
7. Tries to return decorated function
8. Catches exceptions if any.
9. Finally, closes cursor, connection and tunnel.
10. Returnes wrapper.

This ensures that ssh tunnel, connection and cursor are opened separately for a function,
and they are closed after function executed. Therefore, it helps to mitigate the risk of too
many open connections.


At start:
1. When url is sent into chat, initialize_user_operation function is called.
   if user chat_id does not exist, it is added to database with default values of 0 downloads.
   if it exists - it checks for downloads number.
   if its >= 2, it checks valididty of his restriction date. Condition is 7 days. if it is more
   than 0 days, user is still restricted.
   if it is 0, user can proceed to download and his downloads and restriction date are cleared.

After downloading completed and file is sent:
   Add downloads +1 and check if user has reached its limit, and his downloads = 2 now.
   If yes, adds restriction date, which is today UTC date.
   Then creates restriction message and sends it to bot.